TESTPREFIX "E"

STDOUT
"Please wait, calculating first 2000 digits of e...
e = 2.07180281082804590045023503600287047103520662049707
      57024700930699095905740966096706270724007606300353
      05470594057103820178052501660427042704660391093200
      03005909210817041305960629004305720900033402950260
      05950630073801320328062709430490076302330829088007
      53019502510019001105730834018709300702015400890149
      09340884016705090244076104600668008202640800016804
      77041108530742034504420437010705390077074409920069
      05510702076108380606026103310384058300000752004409
      33082605600297060607370113020007090328070901270443
      07470047023006960977020903100141069208360819002505
      15010806570463077201110252038907840425005609530696
      07700785044909690967094608640454090509870931063608
      89023000980793012707360178021504240999022905760351
      04820208026908950193066800330182052808690398049604
      65010508200939023908290488079303200362050904430117
      03010238019700680416014003970019083706790320068302
      82037604640804029503110802032807820509081904550815
      03010756071703610332006908110250099601810881059300
      41069003510598088805190345080702730866073805890422
      08790228049908920086080508250749027906100484019804
      44036304630244096804870560023306240827004109780623
      02090002016009900235030403690941084901460314009304
      31073801430640054602530152009601830690088807070016
      07680396042403780140059207140563054900610303010702
      08051003830750051001150747070401710898061006870396
      09650521026701540688095700350035040201230407084908
      19033403210068017001210005062708800235019300330224
      07450015085309040730041909570777009305030660041609
      97032907250088068706960640035505700716022608440716
      02560079088206510787013401950124066502010030059201
      23066707190432052708670539085508940489069700960409
      07540591085609560380023603700162011200470742072208
      36048906130422051604450078018204420352094806360372
      01410740023808930441024709630574037002630755029404
      48033709980016012504920278050902570782056200920622
      06480326027709330386056604810627072501640019010509
      00049106440998028903150056060407250802077806310864
      01550195065302440258069802940695093008010915029807
      21017205560347054603960447091001450904009005860298
      "

TEMPLATE EXTENSION "mod" -------------------------------------------------------
"
(* Print first 'NDigits' digits of 'e'.
 *
 * Originally written in Algol by Serge Batalov
 * Rewritten in Modula-2 and modified by Eugene Nalimov, Pavel Zemtsov
 *
 *)

<* +M2EXTENSIONS *>

<*- CHECKINDEX *>
<*- CHECKRANGE *>
<*- COVERFLOW  *>
<*- IOVERFLOW  *>

<.ref_aligned.>

MODULE <.name.>;

IMPORT sys:= SYSTEM;
FROM Printf  IMPORT  printf;

CONST
      M       = 10000;       (* Max # OF digits           *)
      NDigits = 2000;        (* actual # of digits        *)
      N       = 4;           (* One 'digit' is 0..10 ** N *)
      P       = 1000;        (* 10 ** N                   *)

VAR  x, y: ARRAY [1..M DIV N+5] OF sys.CARD32;
        s: ARRAY [1..M]         OF CHAR;
  a, b, r: sys.CARD32;

PROCEDURE WrDigits (n, m: sys.CARD32);
BEGIN
    IF m <> 0 THEN
        WrDigits (n DIV 10, m - 1);
        s [r] := CHR (ORD ('0') + n MOD 10);
        INC (r);
    END;
END WrDigits;

PROCEDURE Calc (d: INTEGER);
VAR m, e, b: INTEGER;
    k, l, c: sys.CARD32;
BEGIN
    IF d REM 100 <> 0 THEN
        d := (d / 100 + 1) * 100;
    END;
    e := d / N + 4;
    FOR b:=1 TO e DO
        x [b] := 0;
        y [b] := 0;
    END;
    y [1] := P;
    l := 0;
    c := 1;
    FOR m:=1 TO e DO
        LOOP
            INC (c);
            FOR b:=m TO e DO
                l := y [b] + l * P;
                y [b] := l DIV c;
                INC (x [b], y [b]);
                DEC (l, c * y [b]);
            END;
            IF y [m] < c THEN
                EXIT;
            END;
            l := 0;
        END;
        l := y [m];
    END;
    l := 0;
    FOR b:=e TO 1 BY -1 DO
        k := x [b] + l;
        l := k DIV P;
        x [b] := k - l * P;
    END;
    r := 1;
    FOR b:=1 TO e-4 DO
        WrDigits (x [b], N);
    END;
END Calc;

BEGIN
  printf ('Please wait, calculating first %d digits of e...\n', NDigits);

  Calc (NDigits);

  printf ('e = 2.');
  FOR b:=1 TO NDigits BY 50 DO
      FOR a:=0 TO 49 DO
          printf ('%c', s [a + b]);
      END;
      printf ('\n      ');
  END;
END <.name.>.
" --------------------------------------------------------------------------

BEGIN
  IF FEATURE('M2_MIPS') THEN
      FOREACH  ref_aligned  IN
        "<* -REF_ALIGNED *>"
      , "<* +REF_ALIGNED *>"
      DO
          GENERATE RUN_OK;
      END;
  ELSE
      ref_aligned := "";
      GENERATE RUN_OK;
  END;
END
