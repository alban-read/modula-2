
/*
 * Definitions of Excelsior JET specific data structures and constants.
 */

// internal version of data generated by linker, that consistent with current jet runtime
// if data format generated by linker is changed this constant MUST be changed too
#define LINKER_GENERATED_DATA_VERSION     1

// 'TT' 0001. The low word is used as a version of types table format.
#define TypesTable_Magic   0x54540003


struct TypesTable_Header {
    int   tableBase;    // base for the X2C_TDINDEX32 in this table
    int   totalTDs;     // total number of entries in the table
    void* nextTable;    // next types table in component
    dword initialized;

    // array types occupy table[arrayBase .. arrayBase+arraysNum-1]
    int   arraysBase;
    int   arraysNum;

    // imported types occupy table[importedBase .. importedBase+importedNum-1]
    int   importedBase;
    int   importedNum;

    // exported types occupy table[exportedBase .. exportedBase+exportedNum-1]
    int   exportedBase;
    int   exportedNum;
    int*  hashIndex;

    // absent types occupy table[absentBase .. absentBase+absentNum-1]
    int   absentBase;
    int   absentNum;
    void* absentTypesTable;

    dword magic;
};

#define jsyncFreeObject        0           /*  xjRTS.jsyncFreeObject    */
#define k_array                1           /*  xjRTS.k_array            */

#define UNRESOLVED_TYPE        0x00000077  /*  xjRTS.UNRESOLVED_TYPE    */

struct Link {
  dword tags;
  dword td;
};

struct refAD {
  dword       classObject;
  word        kind;
  byte        elTCode;
  byte        dimnum;
  dword       next;
  dword       elemtype;
};

struct ArrDesc {
  struct Link link;

  dword       jsync;
  word        kind;
  byte        elTCode;
  byte        dimnum;
  dword       length;
  dword       elemtype;
};

struct StringInfo {
  int hash;
  int pos;
  int len;
};


/*----------------------------------------------------------------------------*/
/*                        Embedded File System                                */
/*----------------------------------------------------------------------------*/

#define EFS_MAGIC         0x53465845         /* "EXFS" */
#define EFS_VERSION       5
#define EFS_IDENTATION    3

#define fs_exists         0x00000001
#define fs_directory      0x00000002
#define fs_writeable      0x00000004
#define fs_readable       0x00000008
#define fs_hidden         0x00000010
#define fs_notiteratable  0x00000020


struct EFile {
    unichar * name;
    dword     attrs;
    dword     lastModifiedTimeLO;
    dword     lastModifiedTimeHI;
    dword     length;
    void    * data;
    void    * efsNode;
};

struct EDirectory {
    int firstFileIndex;    // index of the first file of the directory
    int nFiles;            // number of files
};


struct EMountPoint {
    unichar * hostDir;
    struct EDirectory efsDir;
};


struct EDesc {
    dword magic;
    dword version;

    dword mounted;

    void * names;        // address of names segment
    dword namesLength;   // length of names segment

    int nMountPoints;
    EMountPoint * mountPoints;

    int nFiles;
    EFile * files;
};

