<* +M2EXTENSIONS  *>
<* ALIGNMENT="8" *>
<* ENUMSIZE="4" *>
<* SETSIZE="4" *>

DEFINITION MODULE ["StdCall"] NB30;

(* NB30.def

   This module contains the definitions for portable NetBIOS 3.0
   support.

*)

FROM WinDef IMPORT UCHAR, PUCHAR, WORD, DWORD, ULONG, USHORT, 
                   HANDLE;


(****************************************************************
 *                                                              *
 *              Data structure templates                        *
 *                                                              *
 ****************************************************************)

CONST NCBNAMSZ =  16; (* absolute length of a net name           *)
      MAX_LANA = 254; (* lana's in range 0 to MAX_LANA inclusive *)

(*
 * Network Control Block
 *)

TYPE PNCB = POINTER TO NCB;
     NCB =
     RECORD
         ncb_command  : UCHAR;                          (* command code                   *)
         ncb_retcode  : UCHAR;                          (* return code                    *)
         ncb_lsn      : UCHAR;                          (* local session number           *)
         ncb_num      : UCHAR;                          (* number of our network name     *)
         ncb_buffer   : PUCHAR;                         (* address of message buffer      *)
         ncb_length   : WORD;                           (* size of message buffer         *)
         ncb_callname : ARRAY [0..NCBNAMSZ-1] OF UCHAR; (* blank-padded name of remote    *)
         ncb_name     : ARRAY [0..NCBNAMSZ-1] OF UCHAR; (* our blank-padded netname       *)
         ncb_rto      : UCHAR;                          (* rcv timeout/retry count        *)
         ncb_sto      : UCHAR;                          (* send timeout/sys timeout       *)
         ncb_post     : PROCEDURE (PNCB);               (* POST routine address           *)
         ncb_lana_num : UCHAR;                          (* lana (adapter) number          *)
         ncb_cmd_cplt : UCHAR;                          (* 0xff => commmand pending       *)
         ncb_reserve  : ARRAY [0..9] OF UCHAR;          (* reserved, used by BIOS         *)
         ncb_event    : HANDLE;                         (* HANDLE to Win32 event which    *)
                                                        (* will be set to the signalled   *)
                                                        (* state when an ASYNCH command   *)
                                                        (* completes                      *)
     END;

(*
 *  Structure returned to the NCB command NCBASTAT is ADAPTER_STATUS followed
 *  by an array of NAME_BUFFER structures.
 *)

TYPE ADAPTER_STATUS = RECORD
                             adapter_address : ARRAY [0..5] OF UCHAR;
                             rev_major       : UCHAR;
                             reserved0       : UCHAR;
                             adapter_type    : UCHAR;
                             rev_minor       : UCHAR;
                             duration        : WORD;
                             frmr_recv       : WORD;
                             frmr_xmit       : WORD;

                             iframe_recv_err : WORD;

                             xmit_aborts     : WORD;
                             xmit_success    : DWORD;
                             recv_success    : DWORD;

                             iframe_xmit_err : WORD;

                             recv_buff_unavail : WORD;
                             t1_timeouts       : WORD;
                             ti_timeouts       : WORD;
                             reserved1         : DWORD;
                             free_ncbs         : WORD;
                             max_cfg_ncbs      : WORD;
                             max_ncbs          : WORD;
                             xmit_buf_unavail  : WORD;
                             max_dgram_size    : WORD;
                             pending_sess      : WORD;
                             max_cfg_sess      : WORD;
                             max_sess          : WORD;
                             max_sess_pkt_size : WORD;
                             name_count        : WORD;
                      END;
    PADAPTER_STATUS = POINTER TO ADAPTER_STATUS;

TYPE NAME_BUFFER = RECORD
                          name : ARRAY [0..NCBNAMSZ-1] OF UCHAR;
                          name_num : UCHAR;
                          name_flags : UCHAR;
                   END;
    PNAME_BUFFER = POINTER TO NAME_BUFFER;

(*  values for name_flags bits. *)

CONST NAME_FLAGS_MASK = VAL (UCHAR, 87h);

      GROUP_NAME      = VAL (UCHAR, 80h);
      UNIQUE_NAME     = VAL (UCHAR, 00h);

      REGISTERING     = VAL (UCHAR, 00h);
      REGISTERED      = VAL (UCHAR, 04h);
      DEREGISTERED    = VAL (UCHAR, 05h);
      DUPLICATE       = VAL (UCHAR, 06h);
      DUPLICATE_DEREG = VAL (UCHAR, 07h);

(*
 *  Structure returned to the NCB command NCBSSTAT is SESSION_HEADER followed
 *  by an array of SESSION_BUFFER structures. If the NCB_NAME starts with an
 *  asterisk then an array of these structures is returned containing the
 *  status for all names.
 *)

TYPE SESSION_HEADER = RECORD
                             sess_name           : UCHAR;
                             num_sess            : UCHAR;
                             rcv_dg_outstanding  : UCHAR;
                             rcv_any_outstanding : UCHAR;
                      END;
    PSESSION_HEADER = POINTER TO SESSION_HEADER;

(*  Values for state *)

<* PUSH *> <* ENUMSIZE = "1" *>

TYPE STATE_ENUM = (STATE_0,
                   LISTEN_OUTSTANDING,  (* 1 *)
                   CALL_PENDING,        (* 2 *)
                   SESSION_ESTABLISHED, (* 3 *)
                   HANGUP_PENDING,      (* 4 *)
                   HANGUP_COMPLETE,     (* 5 *)
                   SESSION_ABORTED);    (* 6 *)

<* POP *>

TYPE SESSION_BUFFER = RECORD
                             lsn                   : UCHAR;
                             state                 : STATE_ENUM;
                             local_name  : ARRAY [0..NCBNAMSZ-1] OF UCHAR;
                             remote_name : ARRAY [0..NCBNAMSZ-1] OF UCHAR;
                             rcvs_outstanding      : UCHAR;
                             sends_outstanding     : UCHAR;
                      END;
    PSESSION_BUFFER = POINTER TO SESSION_BUFFER;

(*
 *  Structure returned to the NCB command NCBENUM.
 *
 *  On a system containing lana's 0, 2 and 3, a structure with
 *  length =3, lana[0]=0, lana[1]=2 and lana[2]=3 will be returned.
 *)

TYPE LANA_ENUM = RECORD
                        length : UCHAR;  (* Number of valid entries in lana[] *)
                        lana   : ARRAY [0..MAX_LANA] OF UCHAR;
                 END;
    PLANA_ENUM = POINTER TO LANA_ENUM;

(*
 *  Structure returned to the NCB command NCBFINDNAME is FIND_NAME_HEADER followed
 *  by an array of FIND_NAME_BUFFER structures.
 *)

TYPE FIND_NAME_HEADER = RECORD
                               node_count   : WORD;
                               reserved     : UCHAR;
                               unique_group : UCHAR;
                        END;
    PFIND_NAME_HEADER = POINTER TO FIND_NAME_HEADER;

TYPE FIND_NAME_BUFFER = RECORD
                               length           : UCHAR;
                               access_control   : UCHAR;
                               frame_control    : UCHAR;
                               destination_addr : ARRAY [0..5]  OF UCHAR;
                               source_addr      : ARRAY [0..5]  OF UCHAR;
                               routing_info     : ARRAY [0..17] OF UCHAR;
                        END;
    PFIND_NAME_BUFFER = POINTER TO FIND_NAME_BUFFER;

(*
 *  Structure provided with NCBACTION. The purpose of NCBACTION is to provide
 *  transport specific extensions to netbios.
 *)

TYPE ACTION_HEADER = RECORD
                            transport_id : ULONG;
                            action_code  : USHORT;
                            reserved     : USHORT;
                     END;
    PACTION_HEADER = POINTER TO ACTION_HEADER;

(*  Values for transport_id *)

CONST ALL_TRANSPORTS = ORD ('M');                     (* M\0\0\0 *)
      MS_NBF         = ORD ('M') +
                       ORD ('N') * 100H +
                       ORD ('B') * 10000H +
                       ORD ('F') * 1000000H;          (* "MNBF" *)


(****************************************************************
 *                                                              *
 *              Special values and constants                    *
 *                                                              *
 ****************************************************************)

(*
 *      NCB Command codes
 *)

CONST NCBCALL         = 10h;            (* NCB CALL                           *)
      NCBLISTEN       = 11h;            (* NCB LISTEN                         *)
      NCBHANGUP       = 12h;            (* NCB HANG UP                        *)
      NCBSEND         = 14h;            (* NCB SEND                           *)
      NCBRECV         = 15h;            (* NCB RECEIVE                        *)
      NCBRECVANY      = 16h;            (* NCB RECEIVE ANY                    *)
      NCBCHAINSEND    = 17h;            (* NCB CHAIN SEND                     *)
      NCBDGSEND       = 20h;            (* NCB SEND DATAGRAM                  *)
      NCBDGRECV       = 21h;            (* NCB RECEIVE DATAGRAM               *)
      NCBDGSENDBC     = 22h;            (* NCB SEND BROADCAST DATAGRAM        *)
      NCBDGRECVBC     = 23h;            (* NCB RECEIVE BROADCAST DATAGRAM     *)
      NCBADDNAME      = 30h;            (* NCB ADD NAME                       *)
      NCBDELNAME      = 31h;            (* NCB DELETE NAME                    *)
      NCBRESET        = 32h;            (* NCB RESET                          *)
      NCBASTAT        = 33h;            (* NCB ADAPTER STATUS                 *)
      NCBSSTAT        = 34h;            (* NCB SESSION STATUS                 *)
      NCBCANCEL       = 35h;            (* NCB CANCEL                         *)
      NCBADDGRNAME    = 36h;            (* NCB ADD GROUP NAME                 *)
      NCBENUM         = 37h;            (* NCB ENUMERATE LANA NUMBERS         *)
      NCBUNLINK       = 70h;            (* NCB UNLINK                         *)
      NCBSENDNA       = 71h;            (* NCB SEND NO ACK                    *)
      NCBCHAINSENDNA  = 72h;            (* NCB CHAIN SEND NO ACK              *)
      NCBLANSTALERT   = 73h;            (* NCB LAN STATUS ALERT               *)
      NCBACTION       = 77h;            (* NCB ACTION                         *)
      NCBFINDNAME     = 78h;            (* NCB FIND NAME                      *)
      NCBTRACE        = 79h;            (* NCB TRACE                          *)


      ASYNCH          = 80h;            (* high bit set == asynchronous       *)

(*
 *      NCB Return codes
 *)

      NRC_GOODRET     = 00h;    (* good return                                *)
                                (* also returned when ASYNCH request accepted *)
      NRC_BUFLEN      = 01h;    (* illegal buffer length                      *)
      NRC_ILLCMD      = 03h;    (* illegal command                            *)
      NRC_CMDTMO      = 05h;    (* command timed out                          *)
      NRC_INCOMP      = 06h;    (* message incomplete, issue another command  *)
      NRC_BADDR       = 07h;    (* illegal buffer address                     *)
      NRC_SNUMOUT     = 08h;    (* session number out of range                *)
      NRC_NORES       = 09h;    (* no resource available                      *)
      NRC_SCLOSED     = 0ah;    (* session closed                             *)
      NRC_CMDCAN      = 0bh;    (* command cancelled                          *)
      NRC_DUPNAME     = 0dh;    (* duplicate name                             *)
      NRC_NAMTFUL     = 0eh;    (* name table full                            *)
      NRC_ACTSES      = 0fh;    (* no deletions, name has active sessions     *)
      NRC_LOCTFUL     = 11h;    (* local session table full                   *)
      NRC_REMTFUL     = 12h;    (* remote session table full                  *)
      NRC_ILLNN       = 13h;    (* illegal name number                        *)
      NRC_NOCALL      = 14h;    (* no callname                                *)
      NRC_NOWILD      = 15h;    (* cannot put * in NCB_NAME                   *)
      NRC_INUSE       = 16h;    (* name in use on remote adapter              *)
      NRC_NAMERR      = 17h;    (* name deleted                               *)
      NRC_SABORT      = 18h;    (* session ended abnormally                   *)
      NRC_NAMCONF     = 19h;    (* name conflict detected                     *)
      NRC_IFBUSY      = 21h;    (* interface busy, IRET before retrying       *)
      NRC_TOOMANY     = 22h;    (* too many commands outstanding, retry later *)
      NRC_BRIDGE      = 23h;    (* ncb_lana_num field invalid                 *)
      NRC_CANOCCR     = 24h;    (* command completed while cancel occurring   *)
      NRC_CANCEL      = 26h;    (* command not valid to cancel                *)
      NRC_DUPENV      = 30h;    (* name defined by anther local process       *)
      NRC_ENVNOTDEF   = 34h;    (* environment undefined. RESET required      *)
      NRC_OSRESNOTAV  = 35h;    (* required OS resources exhausted            *)
      NRC_MAXAPPS     = 36h;    (* max number of applications exceeded        *)
      NRC_NOSAPS      = 37h;    (* no saps available for netbios              *)
      NRC_NORESOURCES = 38h;    (* requested resources are not available      *)
      NRC_INVADDRESS  = 39h;    (* invalid ncb address or length > segment    *)
      NRC_INVDDID     = 3Bh;    (* invalid NCB DDID                           *)
      NRC_LOCKFAIL    = 3Ch;    (* lock of user area failed                   *)
      NRC_OPENERR     = 3fh;    (* NETBIOS not loaded                         *)
      NRC_SYSTEM      = 40h;    (* system error                               *)

      NRC_PENDING     = 0ffh;   (* asynchronous command is not yet finished   *)


(****************************************************************
 *                                                              *
 *              main user entry point for NetBIOS 3.0           *
 *                                                              *
 * Usage: result = Netbios( pncb );                             *
 ****************************************************************)

PROCEDURE Netbios (VAR pnc : NCB) : UCHAR;

END NB30.
