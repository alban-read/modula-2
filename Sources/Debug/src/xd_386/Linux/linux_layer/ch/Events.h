/* Generated by XDS Modula-2 to ANSI C v4.20 translator */

#ifndef Events_H_
#define Events_H_
#ifndef X2C_H_
#include "X2C.h"
#endif
#ifndef KrnTypes_H_
#include "KrnTypes.h"
#endif

enum Events_EXCEPTION_ID {Events_OutOfMemory, 
   Events_WriteProtected, 
   Events_ProgramException, 
   Events_UserException};


enum Events_EVENT_TYPE {Events_InternalError, 
   Events_Exception, 
   Events_BreakpointHit, 
   Events_SingleStep, 
   Events_Call, 
   Events_Return, 
   Events_MemoryAccess, 
   Events_CompCreated, 
   Events_CompDestroyed, 
   Events_ThreadCreated, 
   Events_ThreadDestroyed};


enum Events_ACCESS_TYPE {Events_Nothing, Events_Read, Events_Write, Events_ReadWrite};


struct Events_EVENT;


struct Events_EVENT {
   X2C_CARD32 IP;
   X2C_CARD8 Event;
   union {
      struct {
         X2C_CARD32 ErrorNo;
         X2C_CARD32 ErrorContext;
      } _0;
      struct {
         X2C_CARD8 Exception_ID;
         X2C_WORD XCPT_INFO_1;
         X2C_WORD XCPT_INFO_2;
         X2C_WORD XCPT_INFO_3;
         X2C_WORD XCPT_INFO_4;
      } __attribute((aligned(1), packed)) _1;
      X2C_CARD32 CallAddr;
      X2C_CARD32 ReturnAddr;
      X2C_CARD32 BreakpointInd;
      struct {
         struct KrnTypes_EXEC_INFO Component;
         X2C_BOOLEAN Stopable;
      } __attribute((aligned(1), packed)) _2;
      X2C_CARD32 Handle;
      X2C_CARD32 MemAccess_Ind;
      X2C_CARD32 Thread;
   } __attribute((aligned(1), packed)) _;
} __attribute((aligned(1), packed));

extern struct Events_EVENT Events_LastEvent;

extern X2C_CARD32 Events_QuantityEvents(void);

extern X2C_BOOLEAN Events_QueueIsEmpty(void);

extern X2C_BOOLEAN Events_AddEvent(struct Events_EVENT);

extern void Events_GetEvent(void);

extern X2C_BOOLEAN Events_QueryEvent(X2C_CARD8);

extern void Events_ClearQueue(void);

extern void Events_PrintEvent(struct Events_EVENT);


extern void Events_BEGIN(void);


#endif /* Events_H_ */
