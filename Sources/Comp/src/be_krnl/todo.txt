                    Недоделки/памятки для x86 back-end:
                    -----------------------------------

 1. SYSTEM.ADR (a) + SYSTEM.ADR (b), где a и b локалы - будет сгенерировано
    черт знает что (и это, наверное, навсегда).

 2. Разобраться с SYSTEM.CAST, когда размеры не совпадают.

 3. Некорректно работает прием/передача параметров типа COMPLEX по значению
    в процедуре с Паскальным соглашением о связях.

 4. Компилятор выдаст FATAL ERROR, если
    - не хватит регистров под счет одного дерева
    - будет написано сильно сложное вещественное выражение (для счета которого
     не хватит стека).

 5. Когда мы сажаем вещественную переменную на TOS, то необходимо ее учитывать
    при проверке, не переполнен ли стек сопроцессора (сейчас будет получена
    ошибка времени выполнения); простейшее решение - считать, что max глубина
    стека не 8, а 7.

 6. Не умеет выгружаться в память способ адресации, у которого компоненты -
    временные поддеревья (что может привести к нехватке регистров и FATAL
    ERROR).

 7. При выдаче FATAL ERROR - хорошо бы координату.

 8. Теряются координаты операторов присваивания.

 9. Когда будет прием параметров на регистрах, надо проследить, что обе части
    комплексного числа должны сидеть подряд.

10. Хорошо бы по-настоящему разбивать комплексное число на 2 вещественных
    переменных (сейчас - только на время выполнения операций); тогда надо
    будет решить проблему передачи комплексных VAR-параметров (сейчас она
    возникает только при передаче дальше по ссылке принятого по значению
    комплексного параметра и как-то решена в SSA).

11. SYSTEM.SHIFT (s, x), где ABS (x) >= 32, будет сдвинуто на x MOD 32
    (надо написать в документации, что такие сдвиги мы реализуем бог знает как).

12. Может ли произойти прерывание от сопроцессора в тот момент, когда мы уже
    сняли (или еще хуже, снимаем) реакцию на ошибку?

13. Может ли оптимизатор так наоптимизировать программу, что сборщик мусора
    загнется? Есть ли хоть одна реальная программа, где такое может быть?

14. Вероятно, будет беда с SYSTEM.CAST с константами (в лучшем случае -
    приведется в соответствии со внутренним представлением front-end'а, а
    не целевого процессора).

15. Надо ли делать REAL*10 (т.е. long double) по-настоящему?

16. Надо навести порядок с ALIGNMENT - как минимум, сделать его характеристикой
    типа; хорошо бы еще выравниват так, как это делает подключаемый C compiler.

17. Хорошо бы уметь возбуждать COMPLEX exceptions (а не REAL, как мы сейчас
    это делаем).

18. Можно (очень просто) улучшить качество вещественного кода:
    - сравнение вещественных переменных в памяти с 0.0
    - вещественный ABS (в памяти)

19. При определении, следует ли размещать переменную на способе адресации,
    наверное не надо еще раз обходить граф - все уже было сделано при
    покрытии дерева (несколько ускорит компилятор).

20. При переводе программы в SSA форму: сбрасывать инвариантные в цикле
    переменные в память перед началом цикла, если нужно.

